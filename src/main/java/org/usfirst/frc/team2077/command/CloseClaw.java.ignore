package org.usfirst.frc.team2077.command;

import com.ctre.phoenix.motorcontrol.TalonSRXControlMode;
import com.ctre.phoenix.motorcontrol.can.TalonSRX;
import edu.wpi.first.wpilibj.DigitalInput;
import org.usfirst.frc.team2077.RobotHardware;
import org.usfirst.frc.team2077.common.command.RepeatedCommand;

public class CloseClaw extends RepeatedCommand {

    private ClawDirection direction;

//    private final DigitalInput limitSwitch;
    private final TalonSRX claw;
    private final double speed;

    public enum ClawDirection{
        OPEN(1, 0), //TODO, confirm ports
        CLOSE(-1, 1);

        private final int motorDirection;
        private final int limitSwitchDIOport;

        ClawDirection(int direction, int port){
            motorDirection = direction;
            limitSwitchDIOport = port;
        }
    }

    public CloseClaw(RobotHardware hardware, ClawDirection direction, double speed ){
        this.direction = direction;
        this.speed = speed;

//        limitSwitch = new DigitalInput(direction.limitSwitchDIOport);
        claw = hardware.claw;
    }

    @Override
    public void initialize() {
        claw.set(
            TalonSRXControlMode.PercentOutput,
            speed * direction.motorDirection
        );
    }

    @Override
    public void execute() {

        //Stopping the motor from going further if it's hitting its limit switch
//        if(limitSwitch.get()){
//            claw.set(TalonSRXControlMode.PercentOutput, 0);
//            end(false);
//        }

    }

    @Override
    public void end(boolean interrupted) {
        claw.set(TalonSRXControlMode.PercentOutput,0);
    }


}